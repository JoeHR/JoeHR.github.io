(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{574:function(t,s,a){t.exports=a.p+"assets/img/image-20200410231624856.ad4a36a6.png"},653:function(t,s,a){"use strict";a.r(s);var e=a(21),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://docs.mongodb.com/manual/installation/",target:"_blank",rel:"noopener noreferrer"}},[t._v("mongodb安装"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("docker-compose 安装 mongodb")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker-compose.yml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use root/example as user/password credentials")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mongo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mongo\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MONGO_INITDB_ROOT_USERNAME")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MONGO_INITDB_ROOT_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" example\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 27017"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("27017")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /home/mongotest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/data/db\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mongo-express:")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  image: mongo-express")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  restart: always")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  ports:")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    - 8081:8081")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  environment:")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ME_CONFIG_MONGODB_ADMINUSERNAME: root")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ME_CONFIG_MONGODB_ADMINPASSWORD: example")]),t._v("\n")])])]),e("p",[t._v("创建一个目录，进入目录,创建 docker-compose.yml 文件，写入上面的内容，然后保存 推出后 执行 命令 "),e("code",[t._v("docker-compose up -d")]),t._v(" 即可安装完成")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /home/\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" mongotest\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ./mongotest\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" docker-compose.yml\t\t\t// 粘贴上面的 docker-compose.yml 里的内容\n\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" up "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"查看-已创建运行的容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看-已创建运行的容器"}},[t._v("#")]),t._v(" 查看 已创建运行的容器")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" \t// 查看 在运行的 "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" 容器\n\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" 容器名称  镜像名称\n例如：\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" mongotest_mongo_1 mongo\n\n")])])]),e("p",[t._v("mongo 登录 账号")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("use admin\t// 切换到管理员所在的数据库上\n\ndb.auth"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("用户名,用户密码"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t// 登录 账户\n\nshow dbs\t\t// 查看所有的 数据库db\n\nuse db名称\t// 创建或切换 到 某 db\n\ndb.createUser"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("user:"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),t._v(",pwd:"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),t._v(",roles:"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("role:"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dbOwner"')]),t._v(",db:"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"testdb"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\n// 创建 一个 角色为 testdb数据库 的 dbOwner 的账户\n\n")])])]),e("h2",{attrs:{id:"mongodb-的备份与-恢复"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-的备份与-恢复"}},[t._v("#")]),t._v(" mongodb 的备份与 恢复")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" 容器名称 mongodump "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-h")]),t._v(" localhost "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" root "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" example "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" /temp/test\n进入 mongodb容器 备份 容器用超级管理员的权限将所有的数据库备份到 temp/test 目录\n")])])]),e("p",[e("img",{attrs:{src:a(574),alt:"image-20200410231624856"}})]),t._v(" "),e("ul",[e("li",[t._v("备份工具： mongodunp")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("mongodump "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-h")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" dbname "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" directory\nmongodump "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-h")]),t._v(" IP "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--port")]),t._v(" 端口 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" 用户名 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" 密码 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" 数据库 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" 文件存储路径\nEg: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mongodump -d test -o /data/")]),t._v("\n如果像导出所有数据库，可以去掉 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v("\n-h： mongodb 所在服务器地址，如 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1，也可以指定端口号 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:27017\n-d:  需要备份的数据库名称，如： db_test\n-o:  备份的数据存放位置,如： ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("dump,当然该目录需要提前建立，在备份完成后，系统自动在 dump 目录下建一个 db_test 目录，这个目录里面存放该数据库实例的备份数据\n")])])]),e("ul",[e("li",[t._v("恢复工具 mongorestore")])]),t._v(" "),e("p",[t._v("概念：")]),t._v(" "),e("p",[t._v("mongorestore 是 Mongodb 从备份中恢复数据的工具，它主要用来获取 mongodump 的输出结果，并将备份的数据插入到运行的 Mongodb 中。")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("mongorestore "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-h")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" dbname "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--directoryperdb")]),t._v(" dbdirectory\nEg: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mongorestore --host=10.0.2.105 --port=21017 --db zhpt --dir=zhpt/")]),t._v("\n参数说明：\n-h： mongodb 所在服务器地址\n-d： 需要恢复的数据库名称，如： db_test ,当然这个名称可以不同于备份的时候，比如 new_db\n--directoryperdb：备份数据文件所在位置，如：~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("dump"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("db_test（这里之所以要加db_test子目录，从mongoretore的help中的--directoryperdb，可以读出“每一个db在一个单独的目录”。）\n")])])]),e("Vssue",{attrs:{title:"Vssue Demo"}})],1)}),[],!1,null,null,null);s.default=n.exports}}]);