(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{638:function(t,s,n){"use strict";n.r(s);var e=n(21),a=Object(e.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"eslint-简介及用法介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eslint-简介及用法介绍"}},[t._v("#")]),t._v(" eslint 简介及用法介绍")]),t._v(" "),n("p",[t._v("eslint 是一个开源的 JavaScript 代码检查工具，javascript 是一个动态的弱类型语言，在开发中比较容易出错，而利用 eslint 的代码检查，可以让我们在编码的过程中发现问题，避免一些语法错误和一些空变量的产生，而不是在执行的过程中再去发现，同时对于团队风格的统一也有一定好处。")]),t._v(" "),n("ul",[n("li",[t._v("所有的配置都是拔插的")]),t._v(" "),n("li",[t._v("每条规则都是独立的，可自由选择开启或关闭")]),t._v(" "),n("li",[t._v("eslint 并不推荐任何编码风格， 可完全根据自己的选择自定义编码风格")])]),t._v(" "),n("p",[t._v("eslint官方也提供了3种预安装包：")]),t._v(" "),n("ul",[n("li",[t._v("谷歌标准："),n("a",{attrs:{href:"https://google.github.io/styleguide/jsguide.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-config-google"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("Airbnb标准："),n("a",{attrs:{href:"https://github.com/lin-123/javascript",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-config-airbnb"),n("OutboundLink")],1),t._v(" (该标准以来 eslint、eslint-plugin-import、eslint-plugin-react、eslint-plugin-jsx-a11y等插件)")]),t._v(" "),n("li",[t._v("通用标准： "),n("a",{attrs:{href:"https://standardjs.com/rules.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-config-standard"),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"eslint-配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eslint-配置文件"}},[t._v("#")]),t._v(" eslint 配置文件")]),t._v(" "),n("p",[t._v("通过 "),n("code",[t._v("eslint int")]),t._v("命令初始化 eslint 后，可以宣传生成合适的配置")]),t._v(" "),n("p",[t._v("eslint 独立配置文件类型 有三种：")]),t._v(" "),n("ul",[n("li",[t._v(".eslintrc.js")]),t._v(" "),n("li",[t._v(".eslintrc.json")]),t._v(" "),n("li",[t._v(".eslintrc.yaml")])]),t._v(" "),n("p",[t._v("除了上面三种独立的配置文件外可以存放eslint配置外，eslint 配置也可以存放在 "),n("code",[t._v("package.json")]),t._v(" 文件中的 "),n("code",[t._v("eslintConfig")]),t._v(" 属性中。")]),t._v(" "),n("p",[t._v("如果在同一个项目目录中有多个配置文件，Eslint 将只使用一个。有限顺序是：")]),t._v(" "),n("ul",[n("li",[t._v(".eslintrc.js")]),t._v(" "),n("li",[t._v(".eslintrc.yaml/.eslintrc.yml")]),t._v(" "),n("li",[t._v(".eslintrc.json")]),t._v(" "),n("li",[t._v(".eslintrc")]),t._v(" "),n("li",[t._v("package.json 中的 "),n("code",[t._v("eslintConfig")])])]),t._v(" "),n("p",[t._v(":::war")]),t._v(" "),n("p",[n("strong",[t._v("注意")]),t._v("："),n("code",[t._v(".eslint")]),t._v("文件也可以直接当配置文件，在很多老项目中依然在使用")]),t._v(" "),n("p",[t._v(":::")]),t._v(" "),n("h2",{attrs:{id:"eslint-忽略文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eslint-忽略文件"}},[t._v("#")]),t._v(" eslint 忽略文件")]),t._v(" "),n("p",[t._v("除了 eslint 配置规则文件外，还有一个 特殊的配置文件可以用来过滤项目中某些目录或文件，使其忽略 eslint 规则检测，不对其进行 eslint 规范校验")]),t._v(" "),n("ul",[n("li",[n("code",[t._v(".eslintignore")]),t._v(" 文件")])]),t._v(" "),n("p",[n("code",[t._v(".eslintignore")]),t._v(" 文件是一个纯文本文件，每行包含一个模式或者目录")]),t._v(" "),n("ul",[n("li",[t._v("以"),n("code",[t._v("#")]),t._v("开头的行被当作注释，不影响忽略模式")]),t._v(" "),n("li",[t._v("路径是相对于 "),n("code",[t._v(".eslintignore")]),t._v(" 的位置或当前工作目录、")]),t._v(" "),n("li",[t._v("以"),n("code",[t._v("!")]),t._v("开头的行表示否定模式")])]),t._v(" "),n("div",{staticClass:"language-.eslintignore extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("# 忽略第三方包\n**/node_mudules\n\n# 忽略配置文件\nbuild/*.js\nconfig/*.js\n")])])]),n("p",[t._v("如果 .eslintignore 未找到文件并且未指定备用文件，eslint 将在 "),n("code",[t._v("package.json")]),t._v(" 中查找eslintIgnore 以检查要忽略的文件。")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myapp"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"eslintIgnore"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test1.js"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test2.js"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("在文件中添加 "),n("code",[t._v("eslin-disable")]),t._v(" 注释也可忽略检测")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* eslint-disable */")]),t._v(" 忽略块注释中代码检查\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eslint-disable-line 忽略这一行")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//eslint-disable-next-line 忽略下一行")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),n("ul",[n("li",[t._v("当然你可以指出具体忽略的规则，实际中用的比较少，如下")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("alert('foo'); // eslint-disable-line no-alert\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);