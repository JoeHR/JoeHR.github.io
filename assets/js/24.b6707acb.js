(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{552:function(a,s,t){a.exports=t.p+"assets/img/umi-01-01.fbbec555.png"},639:function(a,s,t){"use strict";t.r(s);var e=t(21),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"umi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#umi"}},[a._v("#")]),a._v(" umi")]),a._v(" "),e("p",[a._v("umi，中文可发音为乌米，是一个可插拔的企业级 react 应用框架。umi 以路由为基础的，支持"),e("a",{attrs:{href:"https://umijs.org/zh/guide/router.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("类 next.js 的约定式路由"),e("OutboundLink")],1),a._v("，以及各种进阶的路由功能，并以此进行功能扩展，比如"),e("a",{attrs:{href:"https://umijs.org/zh/plugin/umi-plugin-react.html#dynamicimport",target:"_blank",rel:"noopener noreferrer"}},[a._v("支持路由级的按需加载"),e("OutboundLink")],1),a._v("。然后配以完善的"),e("a",{attrs:{href:"https://umijs.org/zh/plugin/",target:"_blank",rel:"noopener noreferrer"}},[a._v("插件体系"),e("OutboundLink")],1),a._v("，覆盖从源码到构建产物的每个生命周期，支持各种功能扩展和业务需求，目前内外部加起来已有 50+ 的插件。")]),a._v(" "),e("p",[a._v("umi 是蚂蚁金服的底层前端框架，已直接或间接地服务了 600+ 应用，包括 java、node、H5 无线、离线（Hybrid）应用、纯前端 assets 应用、CMS 应用等。")]),a._v(" "),e("h2",{attrs:{id:"简单使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简单使用"}},[a._v("#")]),a._v(" 简单使用")]),a._v(" "),e("blockquote",[e("p",[a._v("环境准备： node 版本必须 8.10 以上")])]),a._v(" "),e("ol",[e("li",[a._v("全局安装 umi, 推荐使用 yarn 管理 npm 依赖")])]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" i "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" tyarn "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-g")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" global "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" umi\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# or")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" i umi "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-g")]),a._v("\n\numi "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v("\n")])])]),e("blockquote",[e("p",[a._v("FAQ：如果提示 "),e("strong",[a._v("umi: command not found")]),a._v("，你需要将 "),e("code",[a._v("yarn global bin")]),a._v(" 路径配置到环境变量中，方法如下：")])]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# mac 系统:")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" ~/.bash_profile\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在 .bash_profile 中添加下面一行：")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v(":"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" global bin"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v('"')]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# windows系统:")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 获取 global bin 的路径")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" global bin\nC:"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Users"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Administrator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("AppData"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Yarn"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("bin\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 复制上面的 global bin 的路径，添加到系统环境变量 PATH。")]),a._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[a._v("脚手架")])]),a._v(" "),e("p",[a._v("先找个地方建个空目录")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" myapp "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" myapp\n")])])]),e("h3",{attrs:{id:"通过-umi-g-创建一些页面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过-umi-g-创建一些页面"}},[a._v("#")]),a._v(" 通过 "),e("code",[a._v("umi g")]),a._v(" 创建一些页面，")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ umi g page index\n$ umi g page "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("users")]),a._v("\n")])])]),e("blockquote",[e("p",[e("code",[a._v("umi g")]),a._v(" 是 "),e("code",[a._v("umi generate")]),a._v(" 的别名，可用于快速生成 component、page、layout 等，并且可在插件里被扩展，比如 umi-plugin-dva 里扩展了 dva:model，然后就可以通过 "),e("code",[a._v("umi g dva:model foo")]),a._v(" 快速 dva 的 model。")])]),a._v(" "),e("p",[a._v("启动本地服务器")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("$ umi dev\n")])])]),e("h3",{attrs:{id:"通过脚手架创建项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过脚手架创建项目"}},[a._v("#")]),a._v(" 通过脚手架创建项目")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" myapp\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" myapp\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" create umi\n")])])]),e("blockquote",[e("p",[a._v("FAQ：如果提示 "),e("strong",[a._v("create-umi 命令不存在")]),a._v("，你需要执行 "),e("code",[a._v("yarn global bin")]),a._v("，然后把 global bin 的路径添加到环境变量 "),e("code",[a._v("PATH")]),a._v(" 中。")])]),a._v(" "),e("p",[a._v("选择 app project")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("? Select the boilerplate "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("type")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Use arrow keys"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  ant-design-pro  - Create project with an layout-only ant-design-pro boilerplate, use together with umi block.\n❯ app             - Create project with a simple boilerplate, support typescript.\n  block           - Create a umi block.\n  library         - Create a library with umi.\n  plugin          - Create a umi plugin.\n")])])]),e("p",[a._v("选择是否使用 TypeScript，")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("? Do you want to use typescript? "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("y/N"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),e("p",[a._v("然后，选择你需要的功能，功能介绍详见 "),e("a",{attrs:{href:"https://umijs.org/zh/plugin/umi-plugin-react.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("plugin/umi-plugin-react"),e("OutboundLink")],1),a._v("，")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("? What functionality "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v(" you want to enable? "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Press "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("space"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" to select, "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("a"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" to toggle all, "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("i"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" to invert selection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n❯◯ antd\n ◯ dva\n ◯ code splitting\n ◯ dll\n")])])]),e("p",[a._v("确定后，会根据你的选择自动创建好目录和文件，")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("   create package.json\n   create .gitignore\n   create .editorconfig\n   create .env\n   create .eslintrc\n   create .prettierignore\n   create .prettierrc\n   create .umirc.js\n   create mock/.gitkeep\n   create src/app.js\n   create src/assets/yay.jpg\n   create src/global.css\n   create src/layouts/index.css\n   create src/layouts/index.js\n   create src/models/.gitkeep\n   create src/pages/index.css\n   create src/pages/index.js\n   create webpack.config.js\n✨  File Generate Done\n✨  Done "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("161")]),a._v(".20s.\n")])])]),e("p",[a._v("然后安装依赖，")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v("\n")])])]),e("p",[a._v("最后通过 "),e("code",[a._v("yarn start")]),a._v(" 启动本地开发，")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" start\n")])])]),e("p",[a._v("如果顺利，在浏览器打开 "),e("a",{attrs:{href:"http://localhost:8000/",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://localhost:8000"),e("OutboundLink")],1),a._v(" 可看到以下界面，")]),a._v(" "),e("p",[e("img",{attrs:{src:t(552),alt:"img"}})]),a._v(" "),e("h2",{attrs:{id:"umi-中使用scss"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#umi-中使用scss"}},[a._v("#")]),a._v(" umi 中使用scss")]),a._v(" "),e("p",[a._v("在 umi 中可以直接使用 css,但是并不支持 scss,需要加两个 loader才能使用")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" i -S-D node-sass sass-loader\n")])])]),e("Vssue",{attrs:{title:"Vssue Demo"}})],1)}),[],!1,null,null,null);s.default=n.exports}}]);